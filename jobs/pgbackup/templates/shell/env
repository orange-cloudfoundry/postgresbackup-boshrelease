#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

vmName="<%= name %>" # BOSH VM name
vmIndex="<%= index %>" # Index within cluster
deploymentName="<%= spec.deployment %>"
domainName="<%= spec.dns_domain_name %>"
vmFullName="${vmName}/${vmIndex}" # full job name
nodeName="${deploymentName}-${vmName}-${vmIndex}"

jobName="pgbackup"

logPath="/var/vcap/sys/log/${jobName}"
mkdir -p "${logPath}"
exec &>> "${logPath}/${jobName}.log" # STD{OUT,ERR}
echo -e "$(date +'%Y-%m-%dT%H:%M:%S') $(whoami) > $0 $*"

source /var/vcap/jobs/${jobName}/shell/functions

<% if p('pgbackup.debug') == "true" %>turn_debugging_on<% end %>

jobPath="/var/vcap/jobs/${jobName}"
pkgPath="/var/vcap/packages/${jobName}"
runPath="/var/vcap/sys/run/${jobName}"
tmpPath="/var/vcap/sys/tmp/${jobName}"
storePath="/var/vcap/store/${jobName}"

userName="vcap" # old : root , changed to vcap
groupName="root"
LANG="en_US.UTF-8"
HOME="${HOME:-"/home/${userName}"}"
pidFile="${runPath}/${jobName}.pid"
LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-}"

#--- HTTP protocol configurations
http_proxy_is_active="<%= p('pgbackup.proxy.http.active') %>"
#if the http proxy is active then export http proxy parameters
#http proxy parameters
http_proxy_host="<%= p('pgbackup.proxy.http.host') %>"
http_proxy_port="<%= p('pgbackup.proxy.http.port') %>"
http_proxy_username="<%= p('pgbackup.proxy.http.user') %>"
http_proxy_password="<%= p('pgbackup.proxy.http.password') %>"

# check the proxy use a username/password authentication
if [[ "$http_proxy_username" == "" ]] || [[ "$http_proxy_password" == "" ]]; then
http_proxy=${http_proxy_host}:${http_proxy_port}
else
http_proxy=${http_proxy_username}:${http_proxy_password}@${http_proxy_host}:${http_proxy_port}
fi
#--- end HTTP protocol configurations

#--- HTTPS protocol configurations
https_proxy_is_active="<%= p('pgbackup.proxy.https.active') %>"
#if https proxy is active then export https proxy parameters
#https proxy parameters
https_proxy_host="<%= p('pgbackup.proxy.https.host') %>"
https_proxy_port="<%= p('pgbackup.proxy.https.port') %>"
https_proxy_username="<%= p('pgbackup.proxy.https.user') %>"
https_proxy_password="<%= p('pgbackup.proxy.https.password') %>"

# check the proxy use a username/password authentication
if [[ "$https_proxy_username" == "" ]] || [[ "$https_proxy_password" == "" ]]; then
https_proxy=${https_proxy_host}:${https_proxy_port}
else
https_proxy=${https_proxy_username}:${https_proxy_password}@${https_proxy_host}:${https_proxy_port}
fi
#--- end HTTPS protocol configurations

#--- export proxy parameters
if [[ $http_proxy_is_active == "true" ]]; then
export http_proxy="$http_proxy"
fi
if [[ $https_proxy_is_active == "true" ]]; then
export https_proxy="$https_proxy"
fi
#--- end export proxy parameters


export LANG HOME LD_LIBRARY_PATH

add_packages_to_path

configure_job_paths

set_pid
